# Generated by Django 5.0.1 on 2025-10-14 12:32

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ride_type', models.CharField(choices=[('boda', 'Motorcycle Ride'), ('car', 'Car Ride'), ('delivery', 'Package Delivery'), ('express', 'Express Delivery')], default='boda', max_length=20)),
                ('status', models.CharField(choices=[('requested', 'Ride Requested'), ('driver_assigned', 'Driver Assigned'), ('driver_arrived', 'Driver Arrived'), ('in_progress', 'Ride in Progress'), ('completed', 'Ride Completed'), ('cancelled_by_customer', 'Cancelled by Customer'), ('cancelled_by_driver', 'Cancelled by Driver'), ('cancelled_by_system', 'Cancelled by System'), ('no_driver_found', 'No Driver Found')], default='requested', max_length=30)),
                ('pickup_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('pickup_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('pickup_address', models.TextField()),
                ('pickup_landmark', models.CharField(blank=True, max_length=200)),
                ('destination_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('destination_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('destination_address', models.TextField()),
                ('destination_landmark', models.CharField(blank=True, max_length=200)),
                ('pickup_province', models.CharField(blank=True, max_length=100)),
                ('pickup_district', models.CharField(blank=True, max_length=100)),
                ('pickup_sector', models.CharField(blank=True, max_length=100)),
                ('destination_province', models.CharField(blank=True, max_length=100)),
                ('destination_district', models.CharField(blank=True, max_length=100)),
                ('destination_sector', models.CharField(blank=True, max_length=100)),
                ('estimated_distance', models.DecimalField(decimal_places=2, max_digits=8)),
                ('actual_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('estimated_duration', models.PositiveIntegerField()),
                ('actual_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('base_fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('distance_fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_fare', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('surge_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=3)),
                ('total_fare', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('mtn_momo', 'MTN Mobile Money'), ('airtel_money', 'Airtel Money'), ('card', 'Credit/Debit Card')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('processing', 'Payment Processing'), ('completed', 'Payment Completed'), ('failed', 'Payment Failed'), ('refunded', 'Payment Refunded')], default='pending', max_length=20)),
                ('customer_notes', models.TextField(blank=True)),
                ('driver_notes', models.TextField(blank=True)),
                ('special_requirements', models.CharField(blank=True, max_length=500)),
                ('customer_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('driver_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('customer_feedback', models.TextField(blank=True)),
                ('driver_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver_assigned_at', models.DateTimeField(blank=True, null=True)),
                ('driver_arrived_at', models.DateTimeField(blank=True, null=True)),
                ('ride_started_at', models.DateTimeField(blank=True, null=True)),
                ('ride_ended_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.CharField(blank=True, max_length=500)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_rides', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_rides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ride',
                'verbose_name_plural': 'Rides',
                'db_table': 'rides',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RideFare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_fare', models.DecimalField(decimal_places=2, max_digits=8)),
                ('per_km_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('per_minute_rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('distance_charge', models.DecimalField(decimal_places=2, max_digits=8)),
                ('time_charge', models.DecimalField(decimal_places=2, max_digits=8)),
                ('surge_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('night_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('toll_charge', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('promo_discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('loyalty_discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('vat_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('vat_rate', models.DecimalField(decimal_places=2, default=Decimal('18.00'), max_digits=4)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fare_breakdown', to='bookings.ride')),
            ],
            options={
                'verbose_name': 'Ride Fare',
                'verbose_name_plural': 'Ride Fares',
                'db_table': 'ride_fares',
            },
        ),
        migrations.CreateModel(
            name='RideLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('speed', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('heading', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='bookings.ride')),
            ],
            options={
                'verbose_name': 'Ride Location',
                'verbose_name_plural': 'Ride Locations',
                'db_table': 'ride_locations',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RideRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('driver_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('distance_to_pickup', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estimated_arrival_time', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending Response'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('response_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ride_requests', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='bookings.ride')),
            ],
            options={
                'verbose_name': 'Ride Request',
                'verbose_name_plural': 'Ride Requests',
                'db_table': 'ride_requests',
            },
        ),
        migrations.CreateModel(
            name='RideStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, choices=[('requested', 'Ride Requested'), ('driver_assigned', 'Driver Assigned'), ('driver_arrived', 'Driver Arrived'), ('in_progress', 'Ride in Progress'), ('completed', 'Ride Completed'), ('cancelled_by_customer', 'Cancelled by Customer'), ('cancelled_by_driver', 'Cancelled by Driver'), ('cancelled_by_system', 'Cancelled by System'), ('no_driver_found', 'No Driver Found')], max_length=30)),
                ('to_status', models.CharField(choices=[('requested', 'Ride Requested'), ('driver_assigned', 'Driver Assigned'), ('driver_arrived', 'Driver Arrived'), ('in_progress', 'Ride in Progress'), ('completed', 'Ride Completed'), ('cancelled_by_customer', 'Cancelled by Customer'), ('cancelled_by_driver', 'Cancelled by Driver'), ('cancelled_by_system', 'Cancelled by System'), ('no_driver_found', 'No Driver Found')], max_length=30)),
                ('reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='bookings.ride')),
            ],
            options={
                'verbose_name': 'Ride Status History',
                'verbose_name_plural': 'Ride Status Histories',
                'db_table': 'ride_status_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['customer', 'status'], name='rides_custome_cfe58c_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['driver', 'status'], name='rides_driver__d736b9_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['created_at'], name='rides_created_e430d2_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['status'], name='rides_status_376a74_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['ride_type'], name='rides_ride_ty_13804f_idx'),
        ),
        migrations.AddIndex(
            model_name='ridelocation',
            index=models.Index(fields=['ride', 'timestamp'], name='ride_locati_ride_id_a0605f_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['ride', 'status'], name='ride_reques_ride_id_c01214_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['driver', 'status'], name='ride_reques_driver__16e367_idx'),
        ),
        migrations.AddIndex(
            model_name='riderequest',
            index=models.Index(fields=['expires_at'], name='ride_reques_expires_583203_idx'),
        ),
    ]
