# Generated by Django 5.0.1 on 2025-10-14 17:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('police', 'Rwanda National Police'), ('medical', 'Emergency Medical Services'), ('fire', 'Fire and Rescue Services'), ('rtda', 'RTDA Emergency Line'), ('safeboda', 'SafeBoda Emergency Support')], max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('emergency_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('province', models.CharField(blank=True, max_length=50)),
                ('district', models.CharField(blank=True, max_length=50)),
                ('operating_hours', models.CharField(default='24/7', max_length=100)),
                ('response_time_minutes', models.PositiveIntegerField(help_text='Average response time in minutes')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('monthly_rides', 'Monthly Rides Report'), ('tax_collection', 'Tax Collection Report'), ('driver_compliance', 'Driver Compliance Report'), ('safety_incidents', 'Safety Incidents Report'), ('revenue_summary', 'Revenue Summary Report'), ('vehicle_inspection', 'Vehicle Inspection Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('report_data', models.JSONField(help_text='Structured report data')),
                ('summary', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('submitted', 'Submitted to Government'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('government_reference', models.CharField(blank=True, max_length=100)),
                ('government_feedback', models.TextField(blank=True)),
                ('report_file_url', models.URLField(blank=True)),
                ('supporting_documents', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['report_type', 'period_start'], name='government__report__97adab_idx'), models.Index(fields=['status', 'created_at'], name='government__status_d1ec63_idx'), models.Index(fields=['submitted_at'], name='government__submitt_5b14cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='RTDALicense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_type', models.CharField(choices=[('motorcycle_taxi', 'Motorcycle Taxi License'), ('commercial_transport', 'Commercial Transport License'), ('driving_school', 'Driving School License'), ('vehicle_inspection', 'Vehicle Inspection License')], max_length=30)),
                ('issued_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('revoked', 'Revoked'), ('pending', 'Pending Approval')], default='pending', max_length=20)),
                ('vehicle_plate_number', models.CharField(blank=True, max_length=20)),
                ('vehicle_make', models.CharField(blank=True, max_length=50)),
                ('vehicle_model', models.CharField(blank=True, max_length=50)),
                ('vehicle_year', models.PositiveIntegerField(blank=True, null=True)),
                ('last_inspection_date', models.DateTimeField(blank=True, null=True)),
                ('next_inspection_due', models.DateTimeField(blank=True, null=True)),
                ('compliance_score', models.PositiveIntegerField(default=100, help_text='Score out of 100')),
                ('license_document_url', models.URLField(blank=True)),
                ('insurance_document_url', models.URLField(blank=True)),
                ('issued_by', models.CharField(default='RTDA Rwanda', max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('holder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rtda_licenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['license_number'], name='government__license_36eef3_idx'), models.Index(fields=['holder', 'status'], name='government__holder__150781_idx'), models.Index(fields=['status', 'expiry_date'], name='government__status_fcef79_idx'), models.Index(fields=['vehicle_plate_number'], name='government__vehicle_7b2ac2_idx')],
            },
        ),
        migrations.CreateModel(
            name='SafetyIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_type', models.CharField(choices=[('accident', 'Traffic Accident'), ('theft', 'Theft or Robbery'), ('harassment', 'Driver/Customer Harassment'), ('vehicle_breakdown', 'Vehicle Breakdown'), ('medical_emergency', 'Medical Emergency'), ('other', 'Other Safety Incident')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low - Minor Issue'), ('medium', 'Medium - Requires Attention'), ('high', 'High - Serious Incident'), ('critical', 'Critical - Emergency Response')], max_length=10)),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated to Authorities')], default='reported', max_length=15)),
                ('description', models.TextField()),
                ('location_latitude', models.FloatField(blank=True, null=True)),
                ('location_longitude', models.FloatField(blank=True, null=True)),
                ('location_address', models.CharField(blank=True, max_length=300)),
                ('incident_datetime', models.DateTimeField()),
                ('reported_datetime', models.DateTimeField(auto_now_add=True)),
                ('resolved_datetime', models.DateTimeField(blank=True, null=True)),
                ('emergency_services_contacted', models.BooleanField(default=False)),
                ('emergency_service_type', models.CharField(blank=True, max_length=20)),
                ('police_report_number', models.CharField(blank=True, max_length=50)),
                ('resolution_notes', models.TextField(blank=True)),
                ('actions_taken', models.JSONField(blank=True, default=list)),
                ('reported_to_government', models.BooleanField(default=False)),
                ('government_case_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_incidents', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_incidents', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='safety_incidents', to='bookings.ride')),
            ],
            options={
                'indexes': [models.Index(fields=['incident_type', 'severity'], name='government__inciden_772dc3_idx'), models.Index(fields=['status', 'incident_datetime'], name='government__status_f9b6e8_idx'), models.Index(fields=['driver', 'incident_datetime'], name='government__driver__1218b6_idx'), models.Index(fields=['reported_to_government'], name='government__reporte_9edd86_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaxRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tax_type', models.CharField(choices=[('ride_tax', 'Per-Ride Tax'), ('driver_license_fee', 'Driver License Fee'), ('vehicle_registration', 'Vehicle Registration Tax'), ('income_tax', 'Driver Income Tax'), ('platform_tax', 'Platform Operation Tax')], max_length=25)),
                ('tax_period_start', models.DateTimeField()),
                ('tax_period_end', models.DateTimeField()),
                ('taxable_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_rate_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('calculated', 'Calculated'), ('collected', 'Collected'), ('paid_to_government', 'Paid to Government'), ('disputed', 'Disputed'), ('refunded', 'Refunded')], default='calculated', max_length=20)),
                ('collected_at', models.DateTimeField(blank=True, null=True)),
                ('paid_to_government_at', models.DateTimeField(blank=True, null=True)),
                ('government_receipt_number', models.CharField(blank=True, max_length=100)),
                ('government_transaction_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_records', to='bookings.ride')),
                ('taxpayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['tax_type', 'tax_period_start'], name='government__tax_typ_2827bb_idx'), models.Index(fields=['taxpayer', 'status'], name='government__taxpaye_83676a_idx'), models.Index(fields=['status', 'created_at'], name='government__status_de1fca_idx')],
            },
        ),
    ]
